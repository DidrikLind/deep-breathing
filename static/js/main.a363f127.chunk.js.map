{"version":3,"sources":["media/heart.svg","StopWatch.js","media/breath_icon.svg","media/bell_sound.mp3","media/zapsplat_human_male_deep_breathing_19843.mp3","App.js","reportWebVitals.js","index.js"],"names":["Stopwatch","playSound","onRun","onStop","useStopwatch","autoStart","seconds","minutes","hours","isRunning","start","pause","reset","className","join","src","heartIcon","alt","onClick","App","useSound","bellSound","play","breathingSound","playBreath","stopBreath","stop","breathIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAe,MAA0B,kCC0D1BA,G,MAjDG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAAY,EAS5CC,uBAAa,CAAEC,WAAW,IAP5BC,EAF8C,EAE9CA,QACAC,EAH8C,EAG9CA,QACAC,EAJ8C,EAI9CA,MACAC,EAL8C,EAK9CA,UACAC,EAN8C,EAM9CA,MACAC,EAP8C,EAO9CA,MACAC,EAR8C,EAQ9CA,MAIF,OAFwBH,IAA0B,IAAZH,GAAiBA,EAZ1B,KAY+D,IACxEL,IAElB,sBAAKY,UAAU,aAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,+BAAOL,IADT,IACuB,+BAAOD,IAD9B,IAC8C,+BAAOD,OAErD,mBAAGO,UAAU,oBAAb,SACE,qBAAKA,UAAW,CAAC,aAAcJ,GAAa,uBAAuBK,KAAK,KAAMC,IAAKC,EAAWC,IAAI,WAEpG,wBAAQJ,UAAU,sBAChBK,QAAS,WACHT,IACFC,IACAR,MAJN,mBASA,wBAAQW,UAAU,sBAChBK,QAAS,WACJT,IACDE,IACAR,MAJN,mBAQA,wBAAQU,UAAU,sBAChBK,QAAS,WACJT,IACDG,IACAT,MAJN,wB,OC9CS,MAA0B,wCCA1B,MAA0B,uCCA1B,MAA0B,qE,MCwB1BgB,MAdf,WAAgB,IAAD,EACEC,YAASC,GAAjBC,EADM,sBAE8BF,YAASG,GAFvC,mBAENC,EAFM,KAEcC,EAFd,KAEQC,KACrB,OACE,sBAAKb,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKA,UAAU,cAAcE,IAAKY,EAAYV,IAAI,WAEpD,oBAAIJ,UAAU,YAAd,4BACA,cAAC,EAAD,CAAWZ,UAAWqB,EAAMpB,MAAO,kBAAMsB,KAAcrB,OAAQ,kBAAMsB,WCP5DG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a363f127.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/heart.8e99651c.svg\";","import React from 'react';\nimport { useStopwatch } from 'react-timer-hook';\n\nimport heartIcon from './media/heart.svg';\n\nimport './StopWatch.css';\n\nconst SOUND_EVERY_NTH_SECOND = 30;\n\nconst Stopwatch = ({playSound, onRun, onStop}) => {\n  const {\n    seconds,\n    minutes,\n    hours,\n    isRunning,\n    start,\n    pause,\n    reset,\n  } = useStopwatch({ autoStart: false })\n  const shouldPlaySound = isRunning && (seconds === 0 || seconds % SOUND_EVERY_NTH_SECOND === 0);\n  if(shouldPlaySound) playSound();\n  return (\n    <div className=\"stop-watch\">\n      <div className=\"watch-time-text\">\n        <span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\n      </div>\n      <p className=\"watch-status-text\">\n        <img className={['heart-icon', isRunning && 'heart-icon-animated'].join(\" \")} src={heartIcon} alt=\"logo\" />\n      </p>\n      <button className=\"watch-action-button\" \n        onClick={() => {\n          if(!isRunning) {\n            start();\n            onRun();\n          }\n        }}\n      >Start\n      </button>\n      <button className=\"watch-action-button\"\n        onClick={() => {\n          if(isRunning) {\n            pause();\n            onStop();\n          }\n        }}>Pause\n      </button>\n      <button className=\"watch-action-button\" \n        onClick={() => {\n          if(isRunning) {\n            reset();\n            onStop();\n          }\n        }}>Reset\n      </button>\n    </div>\n  );\n}\n\nexport default Stopwatch;","export default __webpack_public_path__ + \"static/media/breath_icon.9f23d969.svg\";","export default __webpack_public_path__ + \"static/media/bell_sound.c679b23d.mp3\";","export default __webpack_public_path__ + \"static/media/zapsplat_human_male_deep_breathing_19843.e7a4e2ab.mp3\";","import React from 'react';\nimport Stopwatch from './StopWatch';\nimport useSound from 'use-sound';\n\nimport breathIcon from './media/breath_icon.svg';\nimport bellSound from './media/bell_sound.mp3';\nimport breathingSound from './media/zapsplat_human_male_deep_breathing_19843.mp3';\n\nimport './App.css';\n\nfunction App() {\n  const [play] = useSound(bellSound);\n  const [playBreath, { stop: stopBreath }] = useSound(breathingSound);\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <img className=\"header-icon\" src={breathIcon} alt=\"logo\" />\n      </header>\n      <h1 className=\"app-title\">Deep Breathing</h1>\n      <Stopwatch playSound={play} onRun={() => playBreath()} onStop={() => stopBreath()} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}