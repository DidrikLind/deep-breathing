{"version":3,"sources":["media/breath_icon.svg","media/bell_sound.mp3","media/zapsplat_human_male_deep_breathing_19843_2.2s.mp3","media/lungs.svg","NormalButton.jsx","components/GuidedBreathing.jsx","media/heart.svg","components/GuidedBreathhold/StopWatch.js","media/audio_fe4d3bcac9.mp3","components/GuidedBreathhold/GuidedBreathhold.jsx","App.js","reportWebVitals.js","index.js"],"names":["NormalButton","text","onClick","props","className","GuidedBreathing","useState","isRunning","setIsRunning","isPaused","setIsPaused","breathCounter","setBreathCounter","useSound","breathingSound","loop","onend","playBreath","stopBreath","stop","useEffect","timer","setInterval","clearInterval","join","src","lungIcon","alt","Stopwatch","playSound","onRun","onStop","useStopwatch","autoStart","seconds","minutes","hours","start","pause","reset","heartIcon","GuidedBreathhold","bellSound","play","musicSound","playMusic","stopMusic","App","breathIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d3d8da3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/breath_icon.9f23d969.svg\";","export default __webpack_public_path__ + \"static/media/bell_sound.c679b23d.mp3\";","export default __webpack_public_path__ + \"static/media/zapsplat_human_male_deep_breathing_19843_2.2s.f91a10f9.mp3\";","export default __webpack_public_path__ + \"static/media/lungs.e926ca5b.svg\";","import React from 'react';\n\nimport './NormalButton.css';\n\n\nconst NormalButton = ({text, onClick, ...props}) => (\n  <button className=\"normal-button\" onClick={onClick} {...props}>{text}</button>\n);\n\nexport default NormalButton;","import React, {useState,useEffect} from 'react';\nimport useSound from 'use-sound';\n\nimport bellSound from '../media/bell_sound.mp3';\nimport breathingSound from '../media/zapsplat_human_male_deep_breathing_19843_2.2s.mp3';\nimport lungIcon from '../media/lungs.svg';\nimport NormalButton from '../NormalButton';\n\nimport './GuidedBreathing.css';\n\nconst BREATH_TIME = 2200;\nconst GuidedBreathing = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [breathCounter, setBreathCounter] = useState(0);\n  const [playBreath, {stop: stopBreath }] = useSound(breathingSound, \n    {\n      loop: true,\n      onend: () => {\n        // TODO: Isit here we wanna sync the sound to the Howl library?\n      }\n    }\n  );\n  useEffect(() => {\n    if(isRunning) {\n      const timer =\n        breathCounter > 0 && setInterval(() => setBreathCounter(breathCounter + 1), BREATH_TIME);\n      return () => clearInterval(timer);\n    }\n  }, [breathCounter]);\n  return (\n    <div className=\"guided-breathing\">\n        <h1 className=\"guided-breathing-title\">Guided Breathing</h1>\n        <h2>{breathCounter}</h2>\n        <p>\n          <img className={['lung-icon', isRunning && 'lung-icon-animated'].join(\" \")} src={lungIcon} alt=\"logo\" />\n        </p>\n        <NormalButton text=\"Start\"\n          onClick={() => {\n            if(!isRunning) {\n              setIsRunning(true);\n              setIsPaused(false);\n              isPaused ?  setBreathCounter(breathCounter + 1) : setBreathCounter(1);\n              playBreath();\n            }\n          }}\n        />\n        <NormalButton text=\"Pause\"\n          onClick={() => {\n            if(isRunning) {\n              setIsRunning(false);\n              setIsPaused(true);\n              stopBreath();\n            }\n          }}\n        />\n        <NormalButton text=\"Reset\"\n          onClick={() => {\n            stopBreath();\n            setIsRunning(false);\n            setBreathCounter(0);\n          }}\n        />\n    </div>\n  );\n\n};\n\nexport default GuidedBreathing;","export default __webpack_public_path__ + \"static/media/heart.8e99651c.svg\";","import React from 'react';\nimport { useStopwatch } from 'react-timer-hook';\n\nimport heartIcon from '../../media/heart.svg';\nimport NormalButton from '../../NormalButton';\n\nimport './StopWatch.css';\n\nconst SOUND_EVERY_NTH_SECOND = 30;\n// TODO: Generalize or only use for breath hold!\nconst Stopwatch = ({playSound, onRun, onStop}) => {\n  const {\n    seconds,\n    minutes,\n    hours,\n    isRunning,\n    start,\n    pause,\n    reset,\n    // sound,\n  } = useStopwatch({ autoStart: false })\n  const shouldPlaySound = isRunning && (seconds === 0 || seconds % SOUND_EVERY_NTH_SECOND === 0);\n  if(shouldPlaySound) playSound();\n  // console.log(sound, \"sound\")\n  return (\n    <div className=\"stop-watch\">\n      <div className=\"watch-time-text\">\n        <span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\n      </div>\n      <p className=\"watch-status-text\">\n        <img className={['lung-icon', isRunning && 'lung-icon-animated'].join(\" \")} src={heartIcon} alt=\"logo\" />\n      </p>\n      <NormalButton text=\"Start\"\n        onClick={() => {\n          if(!isRunning) {\n            start();\n            onRun();\n          }\n        }}\n      />\n      <NormalButton text=\"Pause\"\n        onClick={() => {\n          if(isRunning) {\n            pause();\n            onStop();\n          }\n        }}\n      />\n      <NormalButton text=\"Reset\"\n        onClick={() => {\n          if(isRunning) {\n            reset();\n            onStop();\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Stopwatch;","export default __webpack_public_path__ + \"static/media/audio_fe4d3bcac9.a379b9b0.mp3\";","import React from 'react';\nimport useSound from 'use-sound';\n\nimport Stopwatch from './StopWatch';\nimport bellSound from '../../media/bell_sound.mp3';\nimport musicSound from '../../media/audio_fe4d3bcac9.mp3';\n\nimport './GuidedBreathhold.css';\n\nconst GuidedBreathhold = () => {\n  const [play] = useSound(bellSound);\n  const [playMusic, { stop: stopMusic }] = useSound(musicSound, { loop: true });\n\n  return (\n    <div className=\"guided-breath-hold\">\n      <Stopwatch playSound={play} onRun={() => playMusic()} onStop={() => stopMusic()} />\n    </div>\n  );\n};\n\nexport default GuidedBreathhold;","import React from 'react';\n\nimport breathIcon from './media/breath_icon.svg';\nimport GuidedBreathing from './components/GuidedBreathing';\nimport GuidedBreathhold from './components/GuidedBreathhold/GuidedBreathhold';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <img className=\"header-icon\" src={breathIcon} alt=\"logo\" />\n      </header>\n      <GuidedBreathing />\n      <div className=\"separator\"/>\n      <GuidedBreathhold />\n      {/* <br /> */}\n      {/* <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}