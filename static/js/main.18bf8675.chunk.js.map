{"version":3,"sources":["media/breath_icon.svg","media/bell_sound.mp3","media/zapsplat_human_male_deep_breathing_19843_2.2s.mp3","media/lungs.svg","NormalButton.jsx","components/GuidedBreathing.jsx","App.js","reportWebVitals.js","index.js"],"names":["NormalButton","text","onClick","props","className","GuidedBreathing","useState","isRunning","setIsRunning","breathCounter","setBreathCounter","useSound","bellSound","breathingSound","loop","onend","playBreath","stopBreath","stop","sound","useEffect","timer","setInterval","clearInterval","join","src","lungIcon","alt","App","breathIcon","href","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAAe,G,MAAA,IAA0B,yC,cCA1B,MAA0B,uCCA1B,MAA0B,0ECA1B,MAA0B,kC,cCS1BA,G,MAJM,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAAYC,EAApB,yCACnB,gDAAQC,UAAU,gBAAgBF,QAASA,GAAaC,GAAxD,aAAgEF,OC4DnDI,G,MAvDS,WAAO,IAAD,EACMC,oBAAS,GADf,mBACrBC,EADqB,KACVC,EADU,OAEcF,mBAAS,GAFvB,mBAErBG,EAFqB,KAENC,EAFM,OAGbC,YAASC,GAHI,uBAIoBD,YAASE,EACvD,CACEC,MAAM,EACNC,MAAO,gBAPiB,mBAIrBC,EAJqB,YAIFC,EAJE,EAIRC,KAJQ,EAIUC,MAetC,OAPAC,qBAAU,WACR,GAAGb,EAAW,CACZ,IAAMc,EACJZ,EAAgB,GAAKa,aAAY,kBAAMZ,EAAiBD,EAAgB,KAhB5D,MAiBd,OAAO,kBAAMc,cAAcF,OAE5B,CAACZ,IAEF,sBAAKL,UAAU,mBAAf,UACI,oBAAIA,UAAU,yBAAd,8BACA,6BAAKK,IACL,4BACE,qBAAKL,UAAW,CAAC,YAAaG,GAAa,sBAAsBiB,KAAK,KAAMC,IAAKC,EAAUC,IAAI,WAEjG,cAAC,EAAD,CAAc1B,KAAK,QACjBC,QAAS,WACHK,IACFG,EAAiB,GACjBF,GAAa,GACbQ,QAIN,cAAC,EAAD,CAAcf,KAAK,QACjBC,QAAS,WACJK,IACDC,GAAa,GACbS,QAIN,cAAC,EAAD,CAAchB,KAAK,QACjBC,QAAS,WACPe,IACAT,GAAa,GACbE,EAAiB,W,MCtCdkB,MAbf,WACE,OACE,sBAAKxB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKA,UAAU,cAAcqB,IAAKI,EAAYF,IAAI,WAEpD,cAAC,EAAD,IACA,uBACA,iDAAmB,mBAAGG,KAAK,2CAA2CC,MAAM,UAAzD,qBAAnB,SAAuG,mBAAGD,KAAK,4BAA4BC,MAAM,WAA1C,qCCH9FC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.18bf8675.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/breath_icon.9f23d969.svg\";","export default __webpack_public_path__ + \"static/media/bell_sound.c679b23d.mp3\";","export default __webpack_public_path__ + \"static/media/zapsplat_human_male_deep_breathing_19843_2.2s.f91a10f9.mp3\";","export default __webpack_public_path__ + \"static/media/lungs.e926ca5b.svg\";","import React from 'react';\n\nimport './NormalButton.css';\n\n\nconst NormalButton = ({text, onClick, ...props}) => (\n  <button className=\"normal-button\" onClick={onClick} {...props}>{text}</button>\n);\n\nexport default NormalButton;","import React, {useState,useEffect} from 'react';\nimport useSound from 'use-sound';\n\nimport bellSound from '../media/bell_sound.mp3';\nimport breathingSound from '../media/zapsplat_human_male_deep_breathing_19843_2.2s.mp3';\nimport lungIcon from '../media/lungs.svg';\nimport NormalButton from '../NormalButton';\n\nimport './GuidedBreathing.css';\n\nconst BREATH_TIME = 2200;\nconst GuidedBreathing = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [breathCounter, setBreathCounter] = useState(0);\n  const [play] = useSound(bellSound);\n  const [playBreath, {stop: stopBreath, sound}] = useSound(breathingSound, \n    {\n      loop: true,\n      onend: () => {\n        // TODO: Isit here we wanna sync the sound to the Howl library?\n      }\n    }\n  );\n  useEffect(() => {\n    if(isRunning) {\n      const timer =\n        breathCounter > 0 && setInterval(() => setBreathCounter(breathCounter + 1), BREATH_TIME);\n      return () => clearInterval(timer);\n    }\n  }, [breathCounter]);\n  return (\n    <div className=\"guided-breathing\">\n        <h1 className=\"guided-breathing-title\">Guided Breathing</h1>\n        <h2>{breathCounter}</h2>\n        <p>\n          <img className={['lung-icon', isRunning && 'lung-icon-animated'].join(\" \")} src={lungIcon} alt=\"logo\" />\n        </p>\n        <NormalButton text=\"Start\"\n          onClick={() => {\n            if(!isRunning) {\n              setBreathCounter(1);\n              setIsRunning(true);\n              playBreath();\n            }\n          }}\n        />\n        <NormalButton text=\"Pause\"\n          onClick={() => {\n            if(isRunning) {\n              setIsRunning(false);\n              stopBreath();\n            }\n          }}\n        />\n        <NormalButton text=\"Reset\"\n          onClick={() => {\n            stopBreath();\n            setIsRunning(false);\n            setBreathCounter(0);\n          }}\n        />\n    </div>\n  );\n\n};\n\nexport default GuidedBreathing;","import React from 'react';\n\nimport breathIcon from './media/breath_icon.svg';\nimport GuidedBreathing from './components/GuidedBreathing';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <img className=\"header-icon\" src={breathIcon} alt=\"logo\" />\n      </header>\n      <GuidedBreathing />\n      <br />\n      <div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}